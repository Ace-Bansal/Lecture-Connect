'use strict';

module.exports.create = function (deps) {
  //var PromiseA = deps.PromiseA;
  var A3 = deps.Oauth3.A3;
  var requests = {};

  // Domains
  requests.domains = {};
  requests.domains.all = function (directive, session) {
    var dir = directive.domains || {
      method: 'GET'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/registrations'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
    ;

    return A3.request({
      method: dir.method || 'GET'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] registrations');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.domains.purchase = function (directive, session, opts) {
    var dir = directive.purchaseDomains || {
      method: 'POST'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/registrations'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
    ;
    var data = {
      total: opts.total
    , tip: opts.tip
    , currency: opts.currency
    , description: opts.description
    , cardId: opts.cardId
    , customerId: opts.customerId
    , email: opts.email
    //, registrations: opts.domains
    , domains: opts.domains
    , address: opts.addr || opts.address
    };

    return A3.request({
      method: dir.method || 'POST'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    , json: data
    }).then(function (charge) {
      if (charge.error) {
        console.error('ERROR [oauth3-cli] purchase (registration)');
        console.error(charge);
        process.exit(1);
        return;
      }

      return charge;
    });
  };
  requests.domains.release = function (directive, session, opts) {
    var dir = directive.purchaseDomains || {
      method: 'DELETE'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/registrations/:tld/:sld'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:tld/, opts.tld)
      .replace(/:sld/, opts.sld)
    ;

    return A3.request({
      method: dir.method || 'DELETE'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (charge) {
      if (charge.error) {
        console.error('ERROR [oauth3-cli] release (registration)');
        console.error(charge);
        process.exit(1);
        return;
      }

      return charge;
    });
  };

  // NameServer Glue Records
  requests.glue = {};
  requests.glue.all = function (directive, session) {
    var dir = directive.glue || {
      method: 'GET'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/glue'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
    ;

    return A3.request({
      method: dir.method || 'GET'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (result) {
      return result.records;
    });
  };
  requests.glue.set = function (directive, session, opts) {
    var dir = directive.glue || {
      method: 'POST'
    , url: 'https://' + directive.api
        + '/api/com.daplie.domains/accounts/:accountId/glue'
        + '/:tld/:sld/:sub'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:tld/, opts.tld)
      .replace(/:sld/, opts.sld)
      .replace(/:sub/, opts.sub || '')
    ;

    return A3.request({
      method: dir.method || 'POST'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    , json: { ip: opts.ip }
    });
  };

  // NameServer Domain Records
  requests.ns = {};
  requests.ns.get = function (directive, session, opts) {
    var dir = directive.glue || {
      method: 'GET'
    , url: 'https://' + directive.api
        + '/api/com.daplie.domains/accounts/:accountId/ns'
        + '/:tld/:sld/:sub'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:tld/, opts.tld)
      .replace(/:sld/, opts.sld)
      .replace(/:sub/, opts.sub || '')
    ;

    return A3.request({
      method: dir.method || 'GET'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    });
  };
  requests.ns.set = function (directive, session, opts) {
    var dir = directive.glue || {
      method: 'POST'
    , url: 'https://' + directive.api
        + '/api/com.daplie.domains/accounts/:accountId/ns'
        + '/:tld/:sld/:sub'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:tld/, opts.tld)
      .replace(/:sld/, opts.sld)
      .replace(/:sub/, opts.sub || '')
    ;

    return A3.request({
      method: dir.method || 'POST'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    , json: { nameservers: opts.nameservers }
    });
  };

  return requests;
};
