'use strict';

module.exports.create = function (deps) {
  //var PromiseA = deps.PromiseA;
  var A3 = deps.Oauth3.A3;
  var requests = {};

  // Devices
  requests.devices = {};
  requests.devices.all = function (directive, session) {
    var dir = directive.devices || {
      method: 'GET'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/devices'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
    ;

    return A3.request({
      method: dir.method || 'GET'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] getDevice');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.devices.set = function (directive, session, opts) {
    var dir = directive.devices || {
      method: 'POST'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/devices/:name'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:name/, opts.devicename)
    ;

    return A3.request({
      method: dir.method || 'POST'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    , json: {
        addresses: opts.addresses
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] setDevice');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.devices.detach = function (directive, session, opts) {
    var dir = directive.devices || {
      method: 'DELETE'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId'
        + '/devices/:name'
        + '/:tld/:sld/:sub'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:name/, opts.devicename)
      .replace(/:tld/, opts.tld)
      .replace(/:sld/, opts.sld)
      .replace(/:sub/, opts.sub || '')
    ;

    return A3.request({
      method: dir.method || 'DELETE'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {

      if (results.error) {
        console.error('ERROR [oauth3-cli] devices.detach');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.devices.destroy = function (directive, session, opts) {
    var dir = directive.devices || {
      method: 'DELETE'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/devices/:name'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:name/, opts.devicename)
    ;

    return A3.request({
      method: dir.method || 'DELETE'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] deleteDevice');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.devices.attach = function (directive, session, opts) {
    var dir = directive.devices || {
      method: 'POST'
    , url: 'https://' + directive.api
        + '/api/com.daplie.domains/accounts/:accountId/devices/:name/:tld/:sld/:sub'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:name/, opts.device)
      .replace(/:tld/, opts.tld)
      .replace(/:sld/, opts.sld)
      .replace(/:sub/, opts.sub || '')
    ;
    var query = {};

    [ 'addresses', 'update', 'ttl'/*, 'priority'*/ ].forEach(function (key) {
      if ('undefined' !== typeof opts[key]) {
        query[key] = opts[key];
      }
    });
    //query.access_token = session.accessToken;
    url += '?' + A3.querystringify(query);

    return A3.request({
      method: dir.method || 'POST'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] addDeviceToDomain');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.devices.token  = function (directive, session, opts) {
    var dir = directive.domainToken || {
      method: 'POST'
    , url: 'https://' + directive.api
        + '/api/com.daplie.domains/accounts/:accountId/ddns/tokens/:device'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:device/, opts.device)
    ;

    return A3.request({
      method: dir.method || 'POST'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] createDomainToken');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };


  // DNS
  requests.dns = {};
  requests.dns.all = function (directive, session) {
    var dir = directive.domainRecords || {
      method: 'GET'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/dns'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
    ;

    return A3.request({
      method: dir.method || 'GET'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] getAccountRecords');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.dns.get = function (directive, session, opts) {
    var dir = directive.domainRecords || {
      method: 'GET'
    , url: 'https://' + directive.api + '/api/com.daplie.domains/accounts/:accountId/dns/:tld/:sld'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:tld/, opts.tld)
      .replace(/:sld/, opts.sld)
    ;

    return A3.request({
      method: dir.method || 'GET'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] getDomainRecords');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.dns.destroy = function (directive, session, opts) {
    var dir = directive.domainRecord || {
      method: 'DELETE'
    , url: 'https://' + directive.api
        + '/api/com.daplie.domains/accounts/:accountId/dns/:tld/:sld/:sub/:type/:value'
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:tld/, opts.tld) //top level domain
      .replace(/:sld/, opts.sld) //second level domain
      .replace(/:sub/, opts.sub || '.') //subdomain
      .replace(/:type/, opts.type)
      .replace(/:value/, encodeURIComponent(opts.value))
    ;

    return A3.request({
      method: dir.method || 'DELETE'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] unsetDomainRecord');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };
  requests.dns.set = function (directive, session, opts) {
    var dir = directive.domainRecord || {
      method: 'POST'
    , url: 'https://' + directive.api
        + '/api/com.daplie.domains/accounts/:accountId/dns/:tld/:sld/:sub'
        .replace(/:accountId/, session.acx)
        .replace(/:tld/, opts.tld)
        .replace(/:sld/, opts.sld)
        .replace(/:sub/, opts.sub || '')
    , bearer: 'Bearer'
    };
    var url = dir.url
      .replace(/:accountId/, session.acx)
      .replace(/:tld/, opts.tld)
      .replace(/:sld/, opts.sld)
      .replace(/:sub/, opts.sub || '')
    ;

    return A3.request({
      method: dir.method || 'POST'
    , url: url
    , headers: {
        'Authorization': (dir.bearer || 'Bearer') + ' ' + session.accessToken
      }
    , json: [{
        type: opts.type
      , value: opts.value
      , ttl: opts.ttl
      , priority: opts.priority
      }]
    }).then(function (results) {
      if (results.error) {
        console.error('ERROR [oauth3-cli] setDomainRecord');
        console.error(results);
        process.exit(1);
        return;
      }

      return results;
    });
  };

  return requests;
};
